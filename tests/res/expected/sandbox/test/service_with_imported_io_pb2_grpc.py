# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from sandbox.test import alpha_pb2 as sandbox_dot_test_dot_alpha__pb2
from sandbox.test import beta_pb2 as sandbox_dot_test_dot_beta__pb2
from sandbox.test import delta_pb2 as sandbox_dot_test_dot_delta__pb2
from sandbox.test import nested_pb2 as sandbox_dot_test_dot_nested__pb2
from sandbox.test import rainbow_pb2 as sandbox_dot_test_dot_rainbow__pb2


class ServiceWithImportedInputAndOutputStub(object):
    """This is a really Simple Service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Simple = channel.unary_unary(
                '/sandbox.test.ServiceWithImportedInputAndOutput/Simple',
                request_serializer=sandbox_dot_test_dot_delta__pb2.DeltaMessage.SerializeToString,
                response_deserializer=sandbox_dot_test_dot_rainbow__pb2.SubMessage.FromString,
                )
        self.Nested = channel.unary_unary(
                '/sandbox.test.ServiceWithImportedInputAndOutput/Nested',
                request_serializer=sandbox_dot_test_dot_rainbow__pb2.RainbowMessage.SerializeToString,
                response_deserializer=sandbox_dot_test_dot_beta__pb2.BetaMessage.FromString,
                )
        self.Renest = channel.unary_unary(
                '/sandbox.test.ServiceWithImportedInputAndOutput/Renest',
                request_serializer=sandbox_dot_test_dot_nested__pb2.OuterMessage.SerializeToString,
                response_deserializer=sandbox_dot_test_dot_rainbow__pb2.SubMessage.FromString,
                )
        self.TimestampIn = channel.unary_unary(
                '/sandbox.test.ServiceWithImportedInputAndOutput/TimestampIn',
                request_serializer=sandbox_dot_test_dot_rainbow__pb2.TimestampMessage.SerializeToString,
                response_deserializer=sandbox_dot_test_dot_alpha__pb2.AlphaMessage.FromString,
                )
        self.TimestampOut = channel.unary_unary(
                '/sandbox.test.ServiceWithImportedInputAndOutput/TimestampOut',
                request_serializer=sandbox_dot_test_dot_alpha__pb2.AlphaMessage.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_timestamp__pb2.Timestamp.FromString,
                )
        self.AnyIn = channel.unary_unary(
                '/sandbox.test.ServiceWithImportedInputAndOutput/AnyIn',
                request_serializer=google_dot_protobuf_dot_any__pb2.Any.SerializeToString,
                response_deserializer=sandbox_dot_test_dot_alpha__pb2.AlphaMessage.FromString,
                )
        self.AnyOut = channel.unary_unary(
                '/sandbox.test.ServiceWithImportedInputAndOutput/AnyOut',
                request_serializer=sandbox_dot_test_dot_alpha__pb2.AlphaMessage.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_any__pb2.Any.FromString,
                )


class ServiceWithImportedInputAndOutputServicer(object):
    """This is a really Simple Service
    """

    def Simple(self, request, context):
        """Say hello
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Nested(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Renest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TimestampIn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TimestampOut(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AnyIn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AnyOut(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServiceWithImportedInputAndOutputServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Simple': grpc.unary_unary_rpc_method_handler(
                    servicer.Simple,
                    request_deserializer=sandbox_dot_test_dot_delta__pb2.DeltaMessage.FromString,
                    response_serializer=sandbox_dot_test_dot_rainbow__pb2.SubMessage.SerializeToString,
            ),
            'Nested': grpc.unary_unary_rpc_method_handler(
                    servicer.Nested,
                    request_deserializer=sandbox_dot_test_dot_rainbow__pb2.RainbowMessage.FromString,
                    response_serializer=sandbox_dot_test_dot_beta__pb2.BetaMessage.SerializeToString,
            ),
            'Renest': grpc.unary_unary_rpc_method_handler(
                    servicer.Renest,
                    request_deserializer=sandbox_dot_test_dot_nested__pb2.OuterMessage.FromString,
                    response_serializer=sandbox_dot_test_dot_rainbow__pb2.SubMessage.SerializeToString,
            ),
            'TimestampIn': grpc.unary_unary_rpc_method_handler(
                    servicer.TimestampIn,
                    request_deserializer=sandbox_dot_test_dot_rainbow__pb2.TimestampMessage.FromString,
                    response_serializer=sandbox_dot_test_dot_alpha__pb2.AlphaMessage.SerializeToString,
            ),
            'TimestampOut': grpc.unary_unary_rpc_method_handler(
                    servicer.TimestampOut,
                    request_deserializer=sandbox_dot_test_dot_alpha__pb2.AlphaMessage.FromString,
                    response_serializer=google_dot_protobuf_dot_timestamp__pb2.Timestamp.SerializeToString,
            ),
            'AnyIn': grpc.unary_unary_rpc_method_handler(
                    servicer.AnyIn,
                    request_deserializer=google_dot_protobuf_dot_any__pb2.Any.FromString,
                    response_serializer=sandbox_dot_test_dot_alpha__pb2.AlphaMessage.SerializeToString,
            ),
            'AnyOut': grpc.unary_unary_rpc_method_handler(
                    servicer.AnyOut,
                    request_deserializer=sandbox_dot_test_dot_alpha__pb2.AlphaMessage.FromString,
                    response_serializer=google_dot_protobuf_dot_any__pb2.Any.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sandbox.test.ServiceWithImportedInputAndOutput', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ServiceWithImportedInputAndOutput(object):
    """This is a really Simple Service
    """

    @staticmethod
    def Simple(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sandbox.test.ServiceWithImportedInputAndOutput/Simple',
            sandbox_dot_test_dot_delta__pb2.DeltaMessage.SerializeToString,
            sandbox_dot_test_dot_rainbow__pb2.SubMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Nested(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sandbox.test.ServiceWithImportedInputAndOutput/Nested',
            sandbox_dot_test_dot_rainbow__pb2.RainbowMessage.SerializeToString,
            sandbox_dot_test_dot_beta__pb2.BetaMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Renest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sandbox.test.ServiceWithImportedInputAndOutput/Renest',
            sandbox_dot_test_dot_nested__pb2.OuterMessage.SerializeToString,
            sandbox_dot_test_dot_rainbow__pb2.SubMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TimestampIn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sandbox.test.ServiceWithImportedInputAndOutput/TimestampIn',
            sandbox_dot_test_dot_rainbow__pb2.TimestampMessage.SerializeToString,
            sandbox_dot_test_dot_alpha__pb2.AlphaMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TimestampOut(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sandbox.test.ServiceWithImportedInputAndOutput/TimestampOut',
            sandbox_dot_test_dot_alpha__pb2.AlphaMessage.SerializeToString,
            google_dot_protobuf_dot_timestamp__pb2.Timestamp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AnyIn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sandbox.test.ServiceWithImportedInputAndOutput/AnyIn',
            google_dot_protobuf_dot_any__pb2.Any.SerializeToString,
            sandbox_dot_test_dot_alpha__pb2.AlphaMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AnyOut(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sandbox.test.ServiceWithImportedInputAndOutput/AnyOut',
            sandbox_dot_test_dot_alpha__pb2.AlphaMessage.SerializeToString,
            google_dot_protobuf_dot_any__pb2.Any.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
